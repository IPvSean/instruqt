# Workflow name
name: Instruqt image build 

# Controls when the workflow will run
on:
  # This is a reusable workflow
  workflow_call:
    inputs:
      PACKER_FILE:
        description: 'path to packer file'
        type: string
        required: true
        default: ''
    secrets:
      GCP_SA_KEY:
        description: 'service account json key'
        required: false
      REDHAT_PASSWORD:
        description: 'needed for registry login'
        required: false
      REDHAT_USERNAME:
        description: 'needed for registry login'
        required: false
      REDHAT_OFFLINE_TOKEN:
        description: 'needed to download aap tar'
        required: false
      GPG_PASSPHRASE:
        description: 'decrypt manifest.zip.gpg'
        required: false
      TMM_CONTROLLER:
        description: 'URL for TMM maintained Controller'
        required: false
      TMM_CONTROLLER_TOKEN:
        description: 'service account token for TMM Controller'
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    environment: deploy
    steps:

      # In this job, all steps begin with a name
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        ref: 'main' 

    - name: GCP auth setup
      uses: google-github-actions/auth@v0 
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.3.0

    - name: Use gcloud CLI
      run: gcloud info

    - name: Check pip cache
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip' # caching pip dependencies

    - name: Install requirements
      run: pip install -r requirements.txt 

    - name: Log in to registry.redhat.io
      id: registry-redhat
      uses: redhat-actions/podman-login@v1
      with:
        registry: registry.redhat.io
        username: ${{ secrets.REDHAT_USERNAME }}
        password: ${{ secrets.REDHAT_PASSWORD }}
 
    - name: install packer
      run: sudo apt-get update; sudo apt-get install packer
      
    - name: prepare manifest
      run: gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.GPG_PASSPHRASE }}" --output $HOME/work/instruqt/instruqt/images/ansible/manifest.zip $HOME/work/instruqt/instruqt/images/ansible/manifest.zip.gpg

    - name: restore install cache
      uses: actions/cache/restore@v3
      with:
        path: images/ansible/aap.tar.gz
        key: aaptargz
    
    - name: build image with packer
      id: packer-build
      run: packer build --force ${{ inputs.PACKER_FILE }}
      env:
        REDHAT_OFFLINE_TOKEN: ${{ secrets.REDHAT_OFFLINE_TOKEN }}
        REDHAT_USERNAME: ${{ secrets.REDHAT_USERNAME }}
        REDHAT_PASSWORD: ${{ secrets.REDHAT_PASSWORD }}
        TMM_CONTROLLER: ${{ secrets.TMM_CONTROLLER }}
        TMM_CONTROLLER_TOKEN: ${{ secrets.TMM_CONTROLLER_TOKEN }}
