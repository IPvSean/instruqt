name: prod track test
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
#   push:
#   pull_request:
  # Run CI once per day (at 06:00 UTC)
  # This ensures that even if there haven't been commits that we are still
  # testing. This is particularly important to validate the scenarios against
  # changes in ansible-core or ansible-test
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
#   install-instruqt-cli:
#     runs-on: ubuntu-latest
#     environment: test
#     steps:
#       - run: curl -L https://github.com/instruqt/cli/releases/download/2036-df08c03/instruqt-linux-2036-df08c03.zip -o /tmp/instruqt.zip
#       - run: unzip /tmp/instruqt.zip -d /usr/local/bin/
#       - run: instruqt update
#         env:
#           INSTRUQT_TOKEN: ${{ secrets.INSTRUQT_API_KEY }}

  get-instruqt-prod-tracks:
    runs-on: ubuntu-latest
    environment: test
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      
      - name: get production tracks
        id: set-matrix
        run: |
          echo "::set-output name=matrix::$(\
          curl https://play.instruqt.com/graphql \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -H "Authorization: Bearer $INSTRUQT_API_KEY" \
          -d '{"query":"query tracks {\n  tracks(organizationSlug: \"redhat\") {\n    slug\n    maintenance\n  }\n}\n","variables":{}}' --compressed | jq -s '.[].data.tracks[] | select(.maintenance==false) | .slug' | jq -R -s -c 'split("\n")[:-1]' | sed 's/\\//g' | sed 's/\"\"/"/g'\
          )"
        env:
          INSTRUQT_API_KEY: ${{ secrets.INSTRUQT_API_KEY }}
          INSTRUQT_ORG: ${{ secrets.INSTRUQT_ORG }}
          
      - name: show output
        run: echo ${{ steps.set-matrix.outputs.matrix }}
  
  run-track-test:
    needs: get-instruqt-prod-tracks
    runs-on: ubuntu-latest
    environment: test
    strategy:
      fail-fast: false
      matrix:
        track-slug: ${{ fromJSON(needs.get-instruqt-prod-tracks.outputs.matrix) }}
        
    steps:
    - name: Install instruqt cli
      run: |
        curl -L https://github.com/instruqt/cli/releases/download/2036-df08c03/instruqt-linux-2036-df08c03.zip -o /tmp/instruqt.zip
        unzip /tmp/instruqt.zip -d /usr/local/bin/
        instruqt update
      env:
        INSTRUQT_TOKEN: ${{ secrets.INSTRUQT_API_KEY }}
      
    - name: test slugs
      shell: bash {0}
      run: |
        testtrack="$(/usr/local/bin/instruqt track test $INSTRUQT_ORG/${{ matrix.track-slug }})"
        if [ $? -eq 0 ]
        then
          echo "$testtrack"
          exit 0
        elif [ $? -eq 1 ]
        then
          echo "$testtrack"
          exit 1
        fi
      env:
        INSTRUQT_TOKEN: ${{ secrets.INSTRUQT_API_KEY }}
        INSTRUQT_ORG: ${{ secrets.INSTRUQT_ORG }}
